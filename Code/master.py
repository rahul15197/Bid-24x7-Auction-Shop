# GUI module generated by PAGE version 4.26

# Code written by Rahul Maheshwari (MT19027) & Abhishek Singh Chauhan (MT19085)

import sqlite3 as sq
from functools import partial
from tkinter import messagebox as tkMessageBox

import admin_piri as ap
import items as it
import registration as rg

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import master_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = main_window(root)
    master_support.init(root, top)
    root.resizable(0, 0)
    root.mainloop()


w = None


def create_main_window(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = main_window(w)
    master_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_main_window():
    global w
    w.destroy()
    w = None


def register():
    rg.create_register_window(root=root)


def login(email, password, admin_code):
    code = str(12345)
    email_entry = str(email.get())
    password_entry = str(password.get())
    admin_code_entry = str(admin_code.get())
    conn = sq.connect('accounts.db')
    if admin_code_entry != "" and admin_code_entry == code:
        details_admin = conn.execute("SELECT * from ACCOUNT_DETAILS WHERE email = ? AND password = ?",
                                     (email_entry, password_entry))
        if details_admin.fetchone() is not None:
            user = conn.execute("SELECT * from ACCOUNT_DETAILS WHERE email = ? AND password = ?",
                                (email_entry, password_entry))
            user_tuple = user.fetchone()
            name = user_tuple[0]
            email = user_tuple[1]
            conn = sq.connect('accounts.db')
            conn.execute(
                "CREATE TABLE IF NOT EXISTS CURRENT_USER (name TEXT, email TEXT)")
            conn.execute("DELETE FROM CURRENT_USER")
            conn.execute("INSERT INTO CURRENT_USER (name,email) \
                                          VALUES (?, ?)", (name, email))
            conn.commit()
            root.destroy()
            showadminpanel()
        else:
            tkMessageBox.showerror("Login Error", "Wrong Credentials!!! Please try again")
    elif admin_code_entry == "":
        details = conn.execute("SELECT * from ACCOUNT_DETAILS WHERE email = ? AND password = ?",
                               (email_entry, password_entry))
        if details.fetchone() is not None:
            user = conn.execute("SELECT * from ACCOUNT_DETAILS WHERE email = ? AND password = ?",
                                (email_entry, password_entry))
            user_tuple = user.fetchone()
            name = user_tuple[0]
            email = user_tuple[1]
            conn = sq.connect('accounts.db')
            conn.execute(
                "CREATE TABLE IF NOT EXISTS CURRENT_USER (name TEXT, email TEXT)")
            conn.execute("DELETE FROM CURRENT_USER")
            conn.execute("INSERT INTO CURRENT_USER (name,email) \
                              VALUES (?, ?)", (name, email))
            conn.commit()
            root.destroy()
            showitems()
        else:
            tkMessageBox.showerror("Login Error", "Wrong Credentials!!! Please try again")


def showitems():
    it.vp_start_gui()


def showadminpanel():
    ap.vp_start_gui()


class main_window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        font10 = "-family {Segoe UI} -size 20 -weight normal -slant " \
                 "roman -underline 0 -overstrike 0"
        font11 = "-family {Segoe UI} -size 12 -weight normal -slant " \
                 "roman -underline 0 -overstrike 0"

        top.geometry("1280x800+100+0")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Auction Shop")
        top.configure(background="#e4a4f0")

        conn = sq.connect('accounts.db')
        conn.execute("CREATE TABLE IF NOT EXISTS CATEGORIES (category TEXT)")
        conn.execute("CREATE TABLE IF NOT EXISTS FRAUDS (email TEXT)")
        conn.execute("CREATE TABLE IF NOT EXISTS COUNT (email TEXT , count INTEGER)")
        conn.commit()

        self.title_text = tk.Label(top)
        self.title_text.place(relx=0.32, rely=0.063, height=51, width=518)
        self.title_text.configure(background="#e4a4f0")
        self.title_text.configure(disabledforeground="#a3a3a3")
        self.title_text.configure(font=font10)
        self.title_text.configure(foreground="#ffffff")
        self.title_text.configure(text='''Welcome to Auction Shop Bid 24x7''')

        self.email_text = tk.Label(top)
        self.email_text.place(relx=0.359, rely=0.325, height=34, width=53)
        self.email_text.configure(background="#e4a4f0")
        self.email_text.configure(disabledforeground="#a3a3a3")
        self.email_text.configure(font=font11)
        self.email_text.configure(foreground="#ffffff")
        self.email_text.configure(text='''Email''')

        self.pass_text = tk.Label(top)
        self.pass_text.place(relx=0.352, rely=0.413, height=34, width=88)
        self.pass_text.configure(background="#e4a4f0")
        self.pass_text.configure(disabledforeground="#a3a3a3")
        self.pass_text.configure(font=font11)
        self.pass_text.configure(foreground="#ffffff")
        self.pass_text.configure(text='''Password''')

        self.email_entry = tk.Entry(top)
        self.email_entry.place(relx=0.492, rely=0.338, height=24, relwidth=0.159)

        self.email_entry.configure(background="white")
        self.email_entry.configure(disabledforeground="#a3a3a3")
        self.email_entry.configure(font="TkFixedFont")
        self.email_entry.configure(foreground="#000000")
        self.email_entry.configure(insertbackground="black")

        self.password_entry = tk.Entry(top)
        self.password_entry.place(relx=0.492, rely=0.425, height=24
                                  , relwidth=0.159)
        self.password_entry.configure(background="white")
        self.password_entry.configure(disabledforeground="#a3a3a3")
        self.password_entry.configure(font="TkFixedFont")
        self.password_entry.configure(foreground="#000000")
        self.password_entry.configure(insertbackground="black")
        self.password_entry.configure(show="*")

        self.admin_code = tk.Label(top)
        self.admin_code.place(relx=0.305, rely=0.5, height=34, width=208)
        self.admin_code.configure(activebackground="#f9f9f9")
        self.admin_code.configure(activeforeground="black")
        self.admin_code.configure(background="#e4a4f0")
        self.admin_code.configure(disabledforeground="#a3a3a3")
        self.admin_code.configure(font="-family {Segoe UI} -size 12")
        self.admin_code.configure(foreground="#ffffff")
        self.admin_code.configure(highlightbackground="#d9d9d9")
        self.admin_code.configure(highlightcolor="black")
        self.admin_code.configure(text='''Admin Code (optional)''')
        self.admin_code.configure(show="*")

        self.code_entry = tk.Entry(top)
        self.code_entry.place(relx=0.492, rely=0.513, height=24, relwidth=0.159)
        self.code_entry.configure(background="white")
        self.code_entry.configure(disabledforeground="#a3a3a3")
        self.code_entry.configure(font="TkFixedFont")
        self.code_entry.configure(foreground="#000000")
        self.code_entry.configure(highlightbackground="#d9d9d9")
        self.code_entry.configure(highlightcolor="black")
        self.code_entry.configure(insertbackground="black")
        self.code_entry.configure(selectbackground="#c4c4c4")
        self.code_entry.configure(selectforeground="black")

        self.login_button = tk.Button(top)
        self.login_button.place(relx=0.539, rely=0.65, height=43, width=76)
        self.login_button.configure(activebackground="#dfe2f9")
        self.login_button.configure(activeforeground="#000000")
        self.login_button.configure(background="#9f009f")
        self.login_button.configure(disabledforeground="#a3a3a3")
        self.login_button.configure(font=font11)
        self.login_button.configure(foreground="#ffffff")
        self.login_button.configure(highlightbackground="#d9d9d9")
        self.login_button.configure(highlightcolor="black")
        self.login_button.configure(pady="0")
        self.login_button.configure(text='''Login''')
        log = partial(login, self.email_entry, self.password_entry, self.code_entry)
        self.login_button.configure(command=log)

        self.register_button = tk.Button(top)
        self.register_button.place(relx=0.25, rely=0.65, height=43, width=86)
        self.register_button.configure(activebackground="#dfe2f9")
        self.register_button.configure(activeforeground="#000000")
        self.register_button.configure(background="#9f009f")
        self.register_button.configure(disabledforeground="#a3a3a3")
        self.register_button.configure(font="-family {Segoe UI} -size 12")
        self.register_button.configure(foreground="#ffffff")
        self.register_button.configure(highlightbackground="#d9d9d9")
        self.register_button.configure(highlightcolor="black")
        self.register_button.configure(pady="0")
        self.register_button.configure(text='''Register''')
        self.register_button.configure(command=register)

        self.register_text = tk.Label(top)
        self.register_text.place(relx=0.195, rely=0.6, height=34, width=238)
        self.register_text.configure(activebackground="#f9f9f9")
        self.register_text.configure(activeforeground="black")
        self.register_text.configure(background="#e4a4f0")
        self.register_text.configure(disabledforeground="#a3a3a3")
        self.register_text.configure(font="-family {Segoe UI} -size 12")
        self.register_text.configure(foreground="#ffffff")
        self.register_text.configure(highlightbackground="#d9d9d9")
        self.register_text.configure(highlightcolor="black")
        self.register_text.configure(text='''New User? Register here''')


if __name__ == '__main__':
    vp_start_gui()
