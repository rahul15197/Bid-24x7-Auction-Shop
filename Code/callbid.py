#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Nov 30, 2019 06:47:06 PM IST  platform: Windows NT

import sys
from functools import partial
from tkinter import messagebox

import items as it
import sqlite3 as sq

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import callbid_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = call_bid(root)
    callbid_support.init(root, top)
    root.mainloop()


w = None


def create_call_bid(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = call_bid(w)
    callbid_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_call_bid():
    global w
    w.destroy()
    w = None


class call_bid:

    def update_bid(self, current_bid):
        new_bid = int(self.new_bid_entry.get())
        conn = sq.connect('accounts.db')
        current_user = conn.execute("SELECT * FROM CURRENT_USER").fetchone()[0]
        status = str(conn.execute("SELECT * FROM FOCUS").fetchone()[1])
        id = conn.execute("SELECT * FROM FOCUS").fetchone()[0]
        conn.close()
        if new_bid > current_bid and status == 'available':
            conn1 = sq.connect('accounts.db')
            conn1.execute("UPDATE ITEMS SET current_bid=?, current_bidder=? WHERE id=?", (new_bid, current_user, id))
            conn1.commit()
            messagebox.showinfo("Message", "Bid updated")
        else:
            messagebox.showerror("Message",
                                 "New Bid need to be more than current Bid and item status must be available")

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'

        top.geometry("925x423+300+188")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Call Bid")
        top.configure(background="#b90746")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.current_label = tk.Label(top)
        self.current_label.place(relx=0.249, rely=0.236, height=34, width=104)
        self.current_label.configure(activebackground="#f9f9f9")
        self.current_label.configure(activeforeground="black")
        self.current_label.configure(background="#b90746")
        self.current_label.configure(disabledforeground="#a3a3a3")
        self.current_label.configure(font="-family {Segoe UI} -size 12")
        self.current_label.configure(foreground="#ffffff")
        self.current_label.configure(highlightbackground="#d9d9d9")
        self.current_label.configure(highlightcolor="black")
        self.current_label.configure(text='''Current Bid''')

        self.current_bid_label = tk.Label(top)
        self.current_bid_label.place(relx=0.432, rely=0.236, height=34
                                     , width=174)
        self.current_bid_label.configure(activebackground="#f9f9f9")
        self.current_bid_label.configure(activeforeground="black")
        self.current_bid_label.configure(background="#b90746")
        self.current_bid_label.configure(disabledforeground="#a3a3a3")
        self.current_bid_label.configure(font="-family {Segoe UI} -size 12")
        self.current_bid_label.configure(foreground="#ffffff")
        self.current_bid_label.configure(highlightbackground="#d9d9d9")
        self.current_bid_label.configure(highlightcolor="black")
        conn = sq.connect('accounts.db')
        focus = conn.execute("SELECT * FROM FOCUS")
        current_bid = focus.fetchone()[2]
        self.current_bid_label.configure(text=current_bid)

        self.your_label = tk.Label(top)
        self.your_label.place(relx=0.249, rely=0.402, height=34, width=104)
        self.your_label.configure(activebackground="#f9f9f9")
        self.your_label.configure(activeforeground="black")
        self.your_label.configure(background="#b90746")
        self.your_label.configure(disabledforeground="#a3a3a3")
        self.your_label.configure(font="-family {Segoe UI} -size 12")
        self.your_label.configure(foreground="#ffffff")
        self.your_label.configure(highlightbackground="#d9d9d9")
        self.your_label.configure(highlightcolor="black")
        self.your_label.configure(text='''Your Bid''')

        self.new_bid_entry = tk.Entry(top)
        self.new_bid_entry.place(relx=0.4, rely=0.426, height=26, relwidth=0.264)

        self.new_bid_entry.configure(background="white")
        self.new_bid_entry.configure(disabledforeground="#a3a3a3")
        self.new_bid_entry.configure(font="-family {Courier New} -size 12")
        self.new_bid_entry.configure(foreground="#000000")
        self.new_bid_entry.configure(highlightbackground="#d9d9d9")
        self.new_bid_entry.configure(highlightcolor="black")
        self.new_bid_entry.configure(insertbackground="black")
        self.new_bid_entry.configure(selectbackground="#c4c4c4")
        self.new_bid_entry.configure(selectforeground="black")

        self.confirm_button = tk.Button(top)
        self.confirm_button.place(relx=0.4, rely=0.615, height=47, width=87)
        self.confirm_button.configure(activebackground="#ececec")
        self.confirm_button.configure(activeforeground="#000000")
        self.confirm_button.configure(background="#800420")
        self.confirm_button.configure(disabledforeground="#a3a3a3")
        self.confirm_button.configure(font="-family {Segoe UI} -size 12")
        self.confirm_button.configure(foreground="#ffffff")
        self.confirm_button.configure(highlightbackground="#d9d9d9")
        self.confirm_button.configure(highlightcolor="black")
        self.confirm_button.configure(pady="0")
        self.confirm_button.configure(text='''Confirm''')
        updatebid = partial(self.update_bid, current_bid)
        self.confirm_button.configure(command=updatebid)

        self.cancel_button = tk.Button(top)
        self.cancel_button.place(relx=0.562, rely=0.615, height=47, width=87)
        self.cancel_button.configure(activebackground="#ececec")
        self.cancel_button.configure(activeforeground="#000000")
        self.cancel_button.configure(background="#800420")
        self.cancel_button.configure(disabledforeground="#a3a3a3")
        self.cancel_button.configure(font="-family {Segoe UI} -size 12")
        self.cancel_button.configure(foreground="#ffffff")
        self.cancel_button.configure(highlightbackground="#d9d9d9")
        self.cancel_button.configure(highlightcolor="black")
        self.cancel_button.configure(pady="0")
        self.cancel_button.configure(text='''Cancel''')
        self.cancel_button.configure(command=destroy_call_bid)


if __name__ == '__main__':
    vp_start_gui()
