#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Nov 20, 2019 06:50:11 PM IST  platform: Windows NT

import sys
from functools import partial
import sqlite3 as sq
from tkinter import messagebox
import re

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import registration_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = register_window(root)
    registration_support.init(root, top)
    root.resizable(0,0)
    root.mainloop()


w = None


def create_register_window(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel(root)
    top = register_window(w)
    registration_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_register_window():
    global w
    w.destroy()
    w = None


def registration(email, name, password, repassword, admin_code, result_text):
    email_entry = str(email.get())
    name_entry = str(name.get())
    password_entry = str(password.get())
    repassword_entry = str(repassword.get())
    admin_code_entry = str(admin_code.get())
    conn = sq.connect('accounts.db')
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS ACCOUNT_DETAILS (name TEXT, email TEXT, password TEXT, id INTEGER "
                   "PRIMARY "
                   "KEY AUTOINCREMENT, usertype TEXT)")
    all_rows = conn.execute("SELECT * from ACCOUNT_DETAILS")
    flag = 0
    regex = '^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$'
    if not re.search(regex, email_entry):
        messagebox.showerror("Message", "Enter a valid email address")
    else:
        if password_entry != repassword_entry:
            messagebox.showerror("Message", "Passwords don't match")
        else:
            for row in all_rows:
                if row[1] == email_entry:
                    result_text.configure(text="Email ID already registered, Please login")
                    flag = 1
            all_rows = conn.execute("SELECT * from FRAUDS")
            for row in all_rows:
                if row[0] == email_entry:
                    result_text.configure(text="Email ID under Fraud User list, YOU CANNOT REGISTER")
                    messagebox.showerror("Message", "Email ID under Fraud User list, YOU CANNOT REGISTER")
                    flag = 1
            if flag == 0:
                if admin_code_entry == '12345':
                    conn.execute("INSERT INTO ACCOUNT_DETAILS (name,email,password,usertype) \
                              VALUES (?, ?, ?, ?)", (name_entry, email_entry, password_entry, 'admin'))
                    conn.commit()
                else:
                    conn.execute("INSERT INTO ACCOUNT_DETAILS (name,email,password,usertype) \
                                          VALUES (?, ?, ?, ?)", (name_entry, email_entry, password_entry, 'user'))
                    conn.commit()
                cursor.close()
                conn.close()
                result_text.configure(text="Registration Done")
    return


class register_window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'

        top.geometry("800x800+250+5")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Registration")
        top.configure(background="#56ac00")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        name = tk.StringVar()
        email = tk.StringVar()
        password = tk.StringVar()
        re_password = tk.StringVar()
        admin_code = tk.StringVar()

        self.register_text = tk.Label(top)
        self.register_text.place(relx=0.4, rely=0.113, height=51, width=180)
        self.register_text.configure(activebackground="#f9f9f9")
        self.register_text.configure(activeforeground="black")
        self.register_text.configure(background="#56ac00")
        self.register_text.configure(disabledforeground="#a3a3a3")
        self.register_text.configure(font="-family {Segoe UI} -size 20")
        self.register_text.configure(foreground="#ffffff")
        self.register_text.configure(highlightbackground="#d9d9d9")
        self.register_text.configure(highlightcolor="black")
        self.register_text.configure(text='''Registration''')

        self.namereg_text = tk.Label(top)
        self.namereg_text.place(relx=0.25, rely=0.275, height=34, width=58)
        self.namereg_text.configure(activebackground="#f9f9f9")
        self.namereg_text.configure(activeforeground="black")
        self.namereg_text.configure(background="#56ac00")
        self.namereg_text.configure(disabledforeground="#a3a3a3")
        self.namereg_text.configure(font="-family {Segoe UI} -size 12")
        self.namereg_text.configure(foreground="#ffffff")
        self.namereg_text.configure(highlightbackground="#d9d9d9")
        self.namereg_text.configure(highlightcolor="black")
        self.namereg_text.configure(text='''Name''')

        self.emailreg_text = tk.Label(top)
        self.emailreg_text.place(relx=0.25, rely=0.35, height=34, width=58)
        self.emailreg_text.configure(activebackground="#f9f9f9")
        self.emailreg_text.configure(activeforeground="black")
        self.emailreg_text.configure(background="#56ac00")
        self.emailreg_text.configure(disabledforeground="#a3a3a3")
        self.emailreg_text.configure(font="-family {Segoe UI} -size 12")
        self.emailreg_text.configure(foreground="#ffffff")
        self.emailreg_text.configure(highlightbackground="#d9d9d9")
        self.emailreg_text.configure(highlightcolor="black")
        self.emailreg_text.configure(text='''Email''')

        self.passreg_text = tk.Label(top)
        self.passreg_text.place(relx=0.225, rely=0.425, height=34, width=98)
        self.passreg_text.configure(activebackground="#f9f9f9")
        self.passreg_text.configure(activeforeground="black")
        self.passreg_text.configure(background="#56ac00")
        self.passreg_text.configure(disabledforeground="#a3a3a3")
        self.passreg_text.configure(font="-family {Segoe UI} -size 12")
        self.passreg_text.configure(foreground="#ffffff")
        self.passreg_text.configure(highlightbackground="#d9d9d9")
        self.passreg_text.configure(highlightcolor="black")
        self.passreg_text.configure(text='''Password''')

        self.passreg_text_2 = tk.Label(top)
        self.passreg_text_2.place(relx=0.188, rely=0.5, height=34, width=158)
        self.passreg_text_2.configure(activebackground="#f9f9f9")
        self.passreg_text_2.configure(activeforeground="black")
        self.passreg_text_2.configure(background="#56ac00")
        self.passreg_text_2.configure(disabledforeground="#a3a3a3")
        self.passreg_text_2.configure(font="-family {Segoe UI} -size 12")
        self.passreg_text_2.configure(foreground="#ffffff")
        self.passreg_text_2.configure(highlightbackground="#d9d9d9")
        self.passreg_text_2.configure(highlightcolor="black")
        self.passreg_text_2.configure(text='''Re-type Password''')

        self.namereg_entry = tk.Entry(top)
        self.namereg_entry.place(relx=0.5, rely=0.288, height=26, relwidth=0.305)
        self.namereg_entry.configure(textvariable=name)
        self.namereg_entry.configure(background="white")
        self.namereg_entry.configure(disabledforeground="#a3a3a3")
        self.namereg_entry.configure(font="-family {Courier New} -size 12")
        self.namereg_entry.configure(foreground="#000000")
        self.namereg_entry.configure(highlightbackground="#d9d9d9")
        self.namereg_entry.configure(highlightcolor="black")
        self.namereg_entry.configure(insertbackground="black")
        self.namereg_entry.configure(selectbackground="#c4c4c4")
        self.namereg_entry.configure(selectforeground="black")

        self.passreg_entry = tk.Entry(top)
        self.passreg_entry.place(relx=0.5, rely=0.438, height=24, relwidth=0.305)
        self.passreg_entry.configure(textvariable=password)
        self.passreg_entry.configure(background="white")
        self.passreg_entry.configure(disabledforeground="#a3a3a3")
        self.passreg_entry.configure(font="-family {Courier New} -size 12")
        self.passreg_entry.configure(foreground="#000000")
        self.passreg_entry.configure(highlightbackground="#d9d9d9")
        self.passreg_entry.configure(highlightcolor="black")
        self.passreg_entry.configure(insertbackground="black")
        self.passreg_entry.configure(selectbackground="#c4c4c4")
        self.passreg_entry.configure(selectforeground="black")
        self.passreg_entry.configure(show="*")

        self.emailreg_entry = tk.Entry(top)
        self.emailreg_entry.place(relx=0.5, rely=0.363, height=24
                                  , relwidth=0.305)
        self.emailreg_entry.configure(background="white")
        self.emailreg_entry.configure(textvariable=email)
        self.emailreg_entry.configure(disabledforeground="#a3a3a3")
        self.emailreg_entry.configure(font="-family {Courier New} -size 12")
        self.emailreg_entry.configure(foreground="#000000")
        self.emailreg_entry.configure(highlightbackground="#d9d9d9")
        self.emailreg_entry.configure(highlightcolor="black")
        self.emailreg_entry.configure(insertbackground="black")
        self.emailreg_entry.configure(selectbackground="#c4c4c4")
        self.emailreg_entry.configure(selectforeground="black")

        self.repassreg_entry = tk.Entry(top)
        self.repassreg_entry.place(relx=0.5, rely=0.513, height=24
                                   , relwidth=0.305)
        self.repassreg_entry.configure(background="white")
        self.repassreg_entry.configure(textvariable=re_password)
        self.repassreg_entry.configure(disabledforeground="#a3a3a3")
        self.repassreg_entry.configure(font="-family {Courier New} -size 12")
        self.repassreg_entry.configure(foreground="#000000")
        self.repassreg_entry.configure(highlightbackground="#d9d9d9")
        self.repassreg_entry.configure(highlightcolor="black")
        self.repassreg_entry.configure(insertbackground="black")
        self.repassreg_entry.configure(selectbackground="#c4c4c4")
        self.repassreg_entry.configure(selectforeground="black")
        self.repassreg_entry.configure(show="*")

        self.adminreg_entry = tk.Entry(top)
        self.adminreg_entry.place(relx=0.5, rely=0.588, height=24
                                  , relwidth=0.305)
        self.adminreg_entry.configure(background="white")
        self.adminreg_entry.configure(disabledforeground="#a3a3a3")
        self.adminreg_entry.configure(font="-family {Courier New} -size 12")
        self.adminreg_entry.configure(foreground="#000000")
        self.adminreg_entry.configure(highlightbackground="#d9d9d9")
        self.adminreg_entry.configure(highlightcolor="black")
        self.adminreg_entry.configure(insertbackground="black")
        self.adminreg_entry.configure(selectbackground="#c4c4c4")
        self.adminreg_entry.configure(selectforeground="black")
        self.adminreg_entry.configure(textvariable=admin_code)
        self.adminreg_entry.configure(show="*")

        self.adminreg_text = tk.Label(top)
        self.adminreg_text.place(relx=0.15, rely=0.575, height=34, width=208)
        self.adminreg_text.configure(activebackground="#f9f9f9")
        self.adminreg_text.configure(activeforeground="black")
        self.adminreg_text.configure(background="#56ac00")
        self.adminreg_text.configure(disabledforeground="#a3a3a3")
        self.adminreg_text.configure(font="-family {Segoe UI} -size 12")
        self.adminreg_text.configure(foreground="#ffffff")
        self.adminreg_text.configure(highlightbackground="#d9d9d9")
        self.adminreg_text.configure(highlightcolor="black")
        self.adminreg_text.configure(text='''Admin Code (optional)''')

        self.result_text = tk.Label(top)
        self.result_text.place(relx=0.4, rely=0.875, height=26, width=210)
        self.result_text.configure(background="#56ac00")
        self.result_text.configure(disabledforeground="#a3a3a3")
        self.result_text.configure(foreground="#ffffff")

        self.register_button = tk.Button(top)
        self.register_button.place(relx=0.45, rely=0.738, height=47, width=88)
        self.register_button.configure(activebackground="#ececec")
        self.register_button.configure(activeforeground="#000000")
        self.register_button.configure(background="#007100")
        self.register_button.configure(disabledforeground="#a3a3a3")
        self.register_button.configure(font="-family {Segoe UI} -size 12")
        self.register_button.configure(foreground="#ffffff")
        self.register_button.configure(highlightbackground="#d9d9d9")
        self.register_button.configure(highlightcolor="black")
        self.register_button.configure(pady="0")
        self.register_button.configure(text='''Register''')
        register = partial(registration, self.emailreg_entry, self.namereg_entry, self.passreg_entry,
                           self.repassreg_entry, self.adminreg_entry, self.result_text)
        self.register_button.configure(
            command=register)


if __name__ == '__main__':
    vp_start_gui()
